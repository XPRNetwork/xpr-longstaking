export declare type AuthResponse = {
    code: string;
};
export declare type TokenResponse = {
    access_token: string;
    refresh_token: string;
};
export declare type OpenUrlCallback = (url: string) => Promise<unknown>;
export declare type Config = {
    timeout: number;
    port: number;
    auth0Domain: string;
    auth0ClientId: string;
    auth0TokenScope: string;
    auth0TokenAudience: string;
    successfulLoginHtmlFile: string;
    failedLoginHtmlFile: string;
};
/**
 * At the end of the authentication process, that did not time out, it might take a couple of seconds
 * for the NodeJS HTTP server to close.
 */
export declare class Auth0LoginProcessor {
    readonly config: Config;
    private readonly server;
    private csrfToken;
    private codeVerifier;
    private authResponse;
    constructor(config: Config);
    runLoginProcess(): Promise<TokenResponse>;
    private getToken;
    private startServer;
    private stopServer;
    private handleAuth0Response;
    private getAuthenticationUrl;
}
