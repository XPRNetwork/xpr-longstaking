import { loadConfig, Blockchain } from '@klevoya/hydra'

const config = loadConfig('<%- hydraConfigRelativePath %>')

describe('<%- contractName %>', () => {
  let blockchain = new Blockchain(config)
  let tester = blockchain.createAccount(`<%- contractName %>`);

  beforeAll(async () => {
    tester.setContract(blockchain.contractTemplates[`<%- contractName %>`]);
    tester.updateAuth(`active`, `owner`, {
      accounts: [
        {
          permission: {
            actor: tester.accountName,
            permission: `eosio.code`
          },
          weight: 1
        }
      ]
    });
  })

  beforeEach(async () => {
    tester.resetTables();
  })

  it("can send the <%- exampleActionName %> action", async () => {
    expect.assertions(1)

    await tester.contract.<%- exampleActionName %>(
      <%- exampleActionPayload %>
    );

    expect(tester.getTableRowsScoped(`<%- exampleTableName %>`)[`<%- contractName %>`]).toEqual([<%- exampleTablePayload %>])
  });
})
