/// <reference types="node" />
import SerialBuf from "../serializer/buffer";
import SectionSerializer from "./abstract-section";
declare type TProtocolFeature = {
    feature_digest: string;
    activation_block_num: number;
};
export declare type TProtocolStateObject = {
    activated_protocol_features: TProtocolFeature[];
    preactivated_protocol_features: string[];
    whitelisted_intrinsics: string[];
    num_supported_key_types: number;
};
export declare const PROTOCOL_FEATURES: {
    REPLACE_DEFERRED: string;
    NO_DUPLICATE_DEFERRED_ID: string;
    RESTRICT_ACTION_TO_SELF: string;
    FORWARD_SETCODE: string;
    GET_SENDER: string;
    WEBAUTHN_KEY: string;
    WTMSIG_BLOCK_SIGNATURES: string;
    PREACTIVATE_FEATURE: string;
    ONLY_BILL_FIRST_AUTHORIZER: string;
    DISALLOW_EMPTY_PRODUCER_SCHEDULE: string;
    ONLY_LINK_TO_EXISTING_PERMISSION: string;
    FIX_LINKAUTH_RESTRICTION: string;
    RAM_RESTRICTIONS: string;
};
export declare const defaultProtocolStateObject: TProtocolStateObject;
export default class ProtocolStateObjectSerializer extends SectionSerializer<TProtocolStateObject[]> {
    constructor(buf: SerialBuf, rowCount: number, sectionName: string);
    deserialize(): void;
    serialize(): Buffer;
    printData(): string;
}
export {};
