/// <reference types="lodash" />
/// <reference types="node" />
import SerialBuf from "../serializer/buffer";
import SectionSerializer from "./abstract-section";
import { TAbi, TTransaction } from "../../../types";
export declare type TGeneratedTransactionObject = {
    trx_id: string;
    sender: string;
    sender_id: string;
    payer: string;
    delay_until: string;
    expiration: string;
    published: string;
    packed_trx: string;
};
declare type TDeferredTransaction = {
    expiration: string;
    ref_block_num: number;
    ref_block_prefix: number;
    max_net_usage_words: number;
    max_cpu_usage_ms: number;
    delay_sec: number;
    context_free_actions: any[];
    actions: TTransaction["actions"];
    transaction_extensions: any[];
};
declare type TDeferredTransactionExtended = TDeferredTransaction & Pick<TGeneratedTransactionObject, "sender" | "sender_id" | "payer">;
export default class GeneratedTransactionObjectSerializer extends SectionSerializer<TGeneratedTransactionObject[]> {
    deferredTransactions: TDeferredTransactionExtended[];
    constructor(buf: SerialBuf, rowCount: number, sectionName: string);
    deserializeTransactionData(accountAbiMap: _.Dictionary<TAbi>): void;
    deserialize(): void;
    serialize(): Buffer;
}
export {};
