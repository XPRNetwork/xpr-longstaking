/// <reference types="node" />
import SectionSerializer from "./abstract-section";
import { Dictionary } from "lodash";
import SerialBuf from "../serializer/buffer";
import { Abi } from "eosjs/dist/eosjs-rpc-interfaces";
declare type TTableIdObject = {
    code: string;
    scope: string;
    table: string;
    payer: string;
    count: number;
};
declare type TAccountTables = Dictionary<Dictionary<Dictionary<any[]>>>;
declare type TDataValue = {
    tableIdObject: TTableIdObject;
    indexSet: any[][];
};
declare type TContractTablesRows = Map<string[], TDataValue>;
export default class ContractTablesSerializer extends SectionSerializer<TContractTablesRows> {
    accountTables: TAccountTables;
    constructor(buf: SerialBuf, rowCount: number, sectionName: string);
    deserialize(): void;
    deserializeRowsValues(accountAbiMap: _.Dictionary<Abi>): void;
    serialize(): Buffer;
}
export {};
