"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("util");
const eosjs_serialize_1 = require("eosjs/dist/eosjs-serialize");
const eosjs_numeric_1 = require("eosjs/dist/eosjs-numeric");
class SerialBuf extends eosjs_serialize_1.SerialBuffer {
    getUint64AsDecimal() {
        return eosjs_numeric_1.binaryToDecimal(this.getUint8Array(8));
    }
    getInt64AsNumber() {
        const signedDecimal = this.getInt64AsDecimal();
        return Number.parseInt(signedDecimal);
    }
    getInt64AsDecimal() {
        return eosjs_numeric_1.signedBinaryToDecimal(this.getUint8Array(8));
    }
    getCString() {
        const chars = [];
        let char = 0;
        while ((char = this.get()) !== 0) {
            chars.push(char);
        }
        return this.textDecoder.decode(Uint8Array.from(chars));
    }
    pushCString(text) {
        const textEncoded = this.textEncoder.encode(text);
        this.pushArray(textEncoded);
        this.push(0);
    }
    pushUint8(val) {
        this.push(val & 0xff);
    }
}
exports.default = SerialBuf;
exports.createSerialBuffer = (data) => {
    return new SerialBuf({
        textEncoder: new util_1.TextEncoder(),
        textDecoder: new util_1.TextDecoder(),
        array: data ? data : undefined,
    });
};
